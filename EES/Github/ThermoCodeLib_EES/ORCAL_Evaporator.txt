$Unitsystem SI K Pa J mass rad
$Tabstops 0.2 0.4 0.6 0.8 1.0
$Allow '//'
$UpdateGuesses
$Reference cyclopentane NBP
$include C:\Users\Louis Le\Dropbox\workspace\ORCAL\ORCAL_Models\CAPCOST\CAPCOST.LIB
$include C:\Users\Louis Le\Dropbox\workspace\ORCAL\ORCAL_Models\ORCAL_Components.LIB
$include C:\Users\Louis Le\Dropbox\workspace\ORCAL\ORCAL_Models\ORCAL_Functions.LIB
"<><><><><><><><><><><><><><><><><><><><><><><><><><><><>"
$Bookmark 1. Tips and tricks and nomenclature
// PropSI routines in CoolProp can only work with K, Pa, J, mass set of units. Please verify your Unit System definition
// Using CoolProp lib may decrease compilation time
// The code should be properly developped without figure and table
// Be careful with the converge of program, the guesses values of the variables are very important for the converge of programe, take care about them
"! Nomenclature"
{
}
"<><><><><><><><><><><><><><><><><><><><><><><><><><><><>"
$Bookmark 3. Internal procedure, function, module, subprogram
subprogram thermosyphon(F$,F_r,beta,D_i,D_o,L_e,L_c,L_a,T_e_o,T_c_o,h_e_o,h_c_o,k_pipe:Q_dot,Q_dot_ent,Q_dot_boil,Q_dot_son, T_we_o,T_v_e,T_we_i, T_wc_i,T_wc_o,T_v_c,Q_dot_axial,R_axial,P_v_e)
 
"! Step 1: Design paramerter specification"
L_eff				= L_a+(L_e+L_c)/2 "thermosyphon effective length"
A_e_o				= pi#*L_e*D_o "evaporator external area"
A_e_i				= pi#*L_e*D_i "evaporator internal area"
A_c_o				= pi#*L_c*D_o "condenser external area"
A_c_i				= pi#*L_c*D_i "condenser internal area"
A_axial 			= pi#/4*(D_o^2-D_i^2) "tube annuli cross section area" 
"~~~~~~~~~~~~~~~~~~~~~~"
"!Step 1: Determine thermal resistances"
R_e_o				= 1/(A_e_o*h_e_o)  "evaporator external thermal resistance"
R_we				= ln(D_o/D_i)/(2*pi#*L_e*k_pipe) "evaporator wall thermal resistance"
R_wc				= ln(D_o/D_i)/(2*pi#*L_c*k_pipe) "condenser wall thermal resistance"
R_c_o				= 1/(A_c_o*h_c_o) "condenser external thermal resistance"
R_axial 			= L_eff/(k_pipe*A_axial) "! tube axial thermal resistance"
 
Call thermalresistance_boiling_esdu(F$,Q_dot_radial,D_i,L_e,T_v_e,F_r:R_film,R_pool,R_e_i) "evaporator internal thermal resistance"
Call thermalresistance_cond_esdu(F$,Q_dot_radial,T_v_c,D_i,L_c:R_c_i, Re_f_c) "condenser internal thermal resistance" 
 
"Pressure drop: Ref. VDI 2010" 
P_v_e				= propssi('P','T',T_v_e,'Q',1,F$) "vapour pressure at evaporator section"
DELTAP_v 		= deltap_v(F$,T_v_e,Q_dot_radial,D_i,L_eff) "Assuming that vapour diameter is tube internal diameter"
P_v_c				= P_v_e-DELTAP_v "vapour pressure at condenser section"
"~~~~~~~~~~~~~~~~~~~~~~"
"! Energy balance in evaporator and condenser sections; system of equation; variables: Q_dot_radial, Q_dot_axial, T_we_o,T_we_i,T_v_e,T_v_c,T_wc_i,T_wc_o" 
$VarInfo Q_dot_radial Guess=1e4 Lower=0
$VarInfo Q_dot_axial Guess=10 Lower=0
$VarInfo T_we_o Guess=473 Lower=275 Upper=645  
$VarInfo T_we_i Guess=463 Lower=275 Upper=645  
$VarInfo T_we Guess=468 Lower=275 Upper=645
$VarInfo T_v_e Guess=453 Lower=275 Upper=645  
$VarInfo T_v_c Guess=453 Lower=275 Upper=645  
$VarInfo T_wc_i Guess=443 Lower=275 Upper=645  
$VarInfo T_wc_o Guess=433 Lower=275 Upper=645
$VarInfo T_wc Guess=438 Lower=275 Upper=645
$VarInfo P_v_e Guess=20e5 Lower=2e5 Upper=20e6  
$VarInfo P_v_c Guess=20e5 Lower=2e5 Upper=20e6 
 
Q_dot_radial+Q_dot_axial	= (T_e_o-T_we_o)/R_e_o "equation 1"
Q_dot_radial 				= (T_we_o-T_we_i)/R_we "equation 2"
Q_dot_radial 				= (T_we_i-T_v_e)/R_e_i "equation 3"
 
T_v_c						= propssi('T','P',P_v_c,'Q',1,F$) "equation 4"
 
Q_dot_radial   				= (T_v_c-T_wc_i)/R_c_i "equation 5"
Q_dot_radial    			= (T_wc_i-T_wc_o)/R_wc "equation 6"
Q_dot_radial+Q_dot_axial	= (T_wc_o-T_c_o)/R_c_o "equation 7"
 
Q_dot_axial				= (T_we-T_wc)/R_axial "equation 8" 
T_we						= (T_we_i+T_we_o)/2 "average wall temperature of evaporator section"
T_wc 						= (T_wc_i+T_wc_o)/2 "average wall temperature of condenser section"
"~~~~~~~~~~~~~~~~~~~~~~" 
"! Verification step"
{"Heat of vaporization"
h_lv_e					= propssi('H','P',P_v_e,'Q',1,F$)-propssi('H','P',P_v_e,'Q',0,F$)
h_lv_c					= propssi('H','P',P_v_c,'Q',1,F$)-propssi('H','P',P_v_c,'Q',0,F$)
"Additional thermal resistance"
R4						= (R#*T_v_e^2*(2*pi#*R#*T_v_e)^0.5)/(h_lv_e^2*P_v_e*A_e_o)
R5						= (T_v_e-T_v_c)/Q_dot_radial
R6						= (R#*T_v_c^2*(2*pi#*R#*T_v_c)^0.5)/(h_lv_c^2*P_v_c*A_c_o)
"Thermosyphon overal thermal resistance"
R_tot					= R_e_o+1/(1/(R_we+R_e_i+R4+R5+R6+R_c_i+R_wc)+1/R_axial)+R_c_o
"! Determine the pressure in the pool basis using the equation 11.41 inf Ref. and obtain the saturated temperature for p_P"
"The liquid pressure in the pool base is larger than the vapour pressure, due to the column of liquid in the pool. The boiling phenomena almost do not influence the pressure in the evaporator basis "
rho_l					= propssi('D','P',P_v_e,'Q',0,F$)
p_P					= P_v_e+rho_l*g#*L_e*F_r*sin(beta) "liquid pressure in the pool base, where beta is the thermosyphon inclination angle with the horizontal position"
T_P					= propssi('T','P',p_P,'Q',0,F$) "liquid temperature in the pool base" 
"! Determine DELTAT_h using equation 11.43 in Ref."
"For most of the operation conditions, DELTAT_h is very small and can be neglected. On the other hand, this difference may be important for fluid operating in low temperature levels and, therefore, low vapour pressures"
DELTAT_h				= (T_P-T_v_e)*F_r/2
"! Determine the global temperature difference"
DELTAT 				= T_e_o-T_c_o-DELTAT_h
"Total heat transfer rate" 
Q_dot_tot				= DELTAT/R_tot}
"~~~~~~~~~~~~~~~~~~~~~~" 
Q_dot				= Q_dot_radial+Q_dot_axial
"! Limites de fonctionnement"
Call tctp_operatinglimits(F$,D_i,L_e,T_v_e,Q_dot:Q_dot_ent,Q_dot_boil,Q_dot_son) "assuming that vapour diameter is tube internal diameter d_v = D_i"
"~~~~~~~~~~~~~~~~~~~~~~"
$updateguesses 
End
 
"<><><><><><><><><><><><><><><><><><><><><><><><><><><><>"
$Bookmark 4. Main program
$Bookmark 4.1. Parameters, inputs
"! Heat source inputs"
ExGasCMI$ 	= 'heos::CO2[0.0854]&Water[0.1634]&Oxygen[0.0248]&Nitrogen[0.7264]' "heat source medium: natural gas combustion fumes, CMI data"
p_in_f			= 101325 [Pa] "fumes inlet pressure in Pa"
ORCAL$ 		= 'Case2' "! pay attention to the exported datat to excel"
 
$IF ORCAL$='ORCAL'
T_in_f			= 820 + 273.15 "fumes inlet temperature in K"
T_out_target_f	= 620 + 273.15 "! heat source target outlet temperature"
M_dot_f		= 28.75 [kg/s] "fumes mass flow rate"
V_dot_f		= M_dot_f/rho_in_f "fumes volume flow rate"
$ELSE
V_dot_f		= 145571 [m^3/h]*convert(m^3/h,m^3/s) "! fumes volume flow in Nm3/h, data from CMI"
M_dot_f		= rho_N_f*V_dot_f "fumes mass flow"
	$IF ORCAL$='Case1'
	T_in_f			= 775 + 273.15 "fumes inlet temperature in K"
	T_out_target_f	= 622 + 273.15 "! heat source target outlet temperature"
	$ELSE
		$IF ORCAL$='Case2'
		T_in_f			= 775 + 273.15 "fumes inlet temperature in K"
		T_out_target_f	= 679 + 273.15 "! heat source target outlet temperature"		
		$ELSE
		T_in_f			= 775 + 273.15 "fumes inlet temperature in K"
		T_out_target_f	= 650 + 273.15 "! heat source target outlet temperature"			
		$ENDIF
	$ENDIF
$ENDIF
 
rho_N_f 		= 1.242 [kg/m^3] "standard density of fumes at 0 [C]"
rho_in_f		= rho_N_f*273.15/T_in_f 
rho_in_f1		= propssi('D','P',p_in_f,'T',T_in_f,ExGasCMI$)
cp_target_f		= propssi('C','T',(T_in_f+T_out_target_f)/2,'P',p_in_f,ExGasCMI$) "fumes specific heat"
Q_dot_target_f	= cp_target_f*M_dot_f*(T_in_f-T_out_target_f) "target heat transfer rate"
 
"! ORC inputs"
ORCF$ 		= 'R245fa' "organic working fluid"
$IFNOT ParametricTable = 'T_ev_wf'
	T_ev_wf	= 120+273.15 "evaporating temperature"
$ENDIF
T_cd_wf		= 50+273.15 "condensing temperature"
 
T_b_wf			= propssi('T','P',p_atm,'Q',0,ORCF$) "normal boiling point temperature of organic working fluid"
P_crit_wf		= propssi('Pcrit','',0,'',0,ORCF$) "organic working fluid critical pressure"
T_crit_wf		= propssi('Tcrit','',0,'',0,ORCF$) "organic working fluid critical temperature"
T_crit_wf_C	= converttemp(K,C,T_crit_wf) "organic working fluid critical temperature in °C"
 
"! thermosyphon heat exchanger inputs" 
// fins tube parameters
h_fins			= 7 [mm]*convert(mm,m) "fin heigh, 5-11 mm Econotherm"
D_fins			= 2*h_fins+D_o_tphex "fin outer diameter"
t_fins			= 0.4 [mm]*convert(mm,m) "fin thickness"
n_fpi			= 9 "fins number per inch (fins density)"
f_spacing		= (1/n_fpi)*convert(in, m)
f_free_spacing = f_spacing-t_fins
A_fins			= pi#/4*(D_fins^2-D_o_tphex^2)*2 "single fin surface area"
n_fins_cond	= round(L_c*convert(m,in)*n_fpi) "fins number"
A_fins_cond	= n_fins_cond*A_fins
A_root_cond	= (n_fins_cond+1)*pi#*D_o_tphex*f_free_spacing
A_tot_cond	= {A_fins_cond+A_root_cond}pi#*D_o_tphex*L_c
A_t0_cond		= L_c*D_o_tphex*pi#
 
// Root tube parameters
TTF$			= 'Water' "Thermosyphon working fluid"
F_r_tphex		= 0.6 "thermosyphon evaporator volume filling ratio"
beta_tphex		= pi#/2 "Thermosyphon inclination angle in radian"
D_o_tphex		= 38 [mm]*convert(mm,m) "thermosyphon pipe outer diameter, 15, 22, 28"
D_i_tphex 		= D_o_tphex-2*t_pipe "thermosyphon pipe inner diameter"
t_pipe			= 2.5 [mm]*convert(mm,m) "fin thickness"
L_e			= 3.4 [m] "height of thermosyphon evaporator section"
L_c			= 1.2 {2.229} [m] "height of thermosyphon condenser section"
L_a			= 0.3 [m] "height of thermosyphon adiabatic section"
PipeMat$ 		= 'Carbon_Steel' "thermosyphon pipe material"
 
// other geometrical parameters
W_tphex		= 3.4 [m] "two-phase thermosyphon heat exchanger width"
S_cross_tphex	= W_tphex*L_e "cross-sectional area of fumes"
$IFNOT ParametricTable = 'N_col'
	N_col		= 11 "column number"
$ENDIF
N_col_ini		= 26 "initial value of column number"
N_tpc_ini		= W_tphex/(2.5*D_o_tphex) "initial value for number of thermosyphon column"
N_tpc			= {ceil(N_tpc_ini)}37
N_t				= N_col*N_tpc "Thermosyphon number"
ST\D 			= S_T/D_o_tphex
ST\Df			= S_T/D_fins
SL\D			= S_L/D_o_tphex
ST\SL			= S_T/S_L
L_tphex 		= S_L*N_col "Encombrement dans le sens de l'écoulement"
 
"! tubomachinenary inputs"
epsilon_s_tur 	= 0.8 [-] {eta_tur} "isentropic turbine efficiency"
eta_gen		= 0.9 [-] "electrical generator efficiency"
epsilon_s_pp 	= 0.7 [-] "pump isentropic efficiency"
eta_motor		= 0.9 [-] "electrical motor efficiency"
epsilon_rec	= 0.8 [-] "internal heat exchanger effectiveness"
 
"! Common inputs"
p_atm			= 101325 [Pa] "atmospheric pressure"
"~~~~~~~~~~~~~~~~"
$Bookmark 4.2. Equation
"! fumes side: radiation heat transfer" 
epsilon_f 		= emissivityhottel(0.0854,0.1634,average(T_in_f,T_out_f),L_M) "gas emissivity"
alpha_f 		= absortivityhottel(0.0854,0.1634,average(T_in_f,T_out_f),T_we_moy,L_M) "gas absorptivity"
L_M 			= 1.08*(S_T*S_L-0.785*D_o_tphex^2)/D_o_tphex "mean beam length, Ref: Industrial boilers and heat recovery steam generators: Design, applications and calculation"
h_e_o_rad 		= radiative_coeff(epsilon_f,epsilon_f,average(T_in_f,T_out_f),T_we_moy) "! we have to initialize the value of this parameter"
 
 "! fumes side: convection heat transfer across tube bank"
{
Notes: 
- external_Flow_Inline_Bank: The procedure uses correlations and correction factors provided by Žukauskas (1972). These correlations apply for values of Reynolds numbers from ~30<Re<1e8 and Prandtl numbers from ~0.7<Pr<500.  At Reynolds numbers 100<Re<1000, the heat transfer coefficient can be calculated assuming a single cylinder in crossflow. Under those conditions the Churchill and Bernstein correlation(1977) is used.
Experimental data verifying the correlations are limited in geometric layout to relative longitudinal pitches (S_L/D) between 1.25 and 2.5.  The accuracy of values outside this range is uncertain. 
The Reynolds and Prandtl number are based on fluid properties evaluated at the film temperature, which is the average of the free stream and the surface temperature.
- external_Flow_Staggered_Bank: Experimental data verifying the correlations are limited in geometric layout to relative transverse pitches (S_T/D) between 1.25 and 2.5. The accuracy of values outside this range is uncertain
- external_flow_finnedtubebank: 
}
 
TubeBank$ = 'inline' "tube bank arrangement"
$varinfo h_e_o_conv guess=80 lower=1 units='W/m^2-K'
$IF TubeBank$ = 'staggered'
	S_T = W_tphex/(N_tpc+0.5) "pay attention to the practical design; ST\D can not be out of 1.25 - 2.5 range"
	$IFNOT ParametricTable='S_L'
		S_L = {1.5*D_o_tphex}sqrt(3)/2*S_T "! the value of S_L is not limite in the case of staggered arrangement"
	$ENDIF
	Call external_flow_staggered_bank('Air', T_in_f, T_out_f, T_we_moy , p_in_f, u_f[1],N_col, D_o_tphex,S_T,S_L: h_e_o_conv, DELTAp_f, Nusselt_f, Re_f)
$ELSE
	S_T = W_tphex/(N_tpc) "! the value of S_T is not limite in the case of inline arrangement"
	$IFNOT ParametricTable='S_L'
		S_L = S_T{2.0*D_o_tphex}
	$ENDIF
	Call external_flow_inline_bank('Air', T_in_f, T_out_f, T_we_moy , p_in_f, u_f[1],N_col, D_o_tphex,S_T,S_L: h_e_o_conv, DELTAp_f, Nusselt_f, Re_f)
$ENDIF
Call external_flow_finnedtubebank('Air',T_in_f, T_out_f, p_in_f, u_f[1], S_cross_tphex, W_tphex,N_col, D_o_tphex,D_i_tphex,S_T, S_L,t_fins,D_fins,n_fpi, 'staggered': h_e_o_conv1,alpha_m,DELTAp_f1, Nusselt_f1, Re_f1,w_s,A_tot,A_t,A_fpt,eta_f,A_to)
 
h_e_o 			= h_e_o_conv+h_e_o_rad "thermosyphon evaporator outside heat transfer coefficient"
 
"! organic working fluid side: pool boiling heat transfer coefficient (assuming pool boiling heat transfer is dominant)"
Call pool_boiling('Cooper', ORCF$,T_ev_wf,q_flux_c:h_c_o) "assuming only pool boiling occurs"
 
k_pipe 		= k_(PipeMat$,T_we_moy) "pipe wall thermal conductivity"
 
T_f[1]		= T_in_f 
 
Duplicate i = 1,N_col 
$varInfo T_f[i] Lower=298 Units='K'
$varInfo Q_dot[i] Lower=0 Units='W'
$varInfo Q_dot_boil[i] Lower=0 Units='W'
$varInfo Q_dot_son[i] Lower=0 Units='W'
$varInfo T_we_o[i] Lower=298 Units='K'
$varInfo T_v_e[i] Lower=298 Upper=645 Units='K'
$varInfo T_we_i[i] Lower=298 Units='K'
$varInfo T_wc_i[i] Lower=298 Units='K'
$varInfo T_wc_o[i] Lower=298 Units='K'
$varInfo T_v_c[i] Lower=298 Upper=645 Units='K'
$varInfo Q_dot_axial[i] Lower=0 Units='W'
$varInfo R_axial[i] Lower=0 Units='K/W'
$varInfo P_v_e[i] Lower=2e5 Upper=20e6 Units='Pa'
 
Call thermosyphon(TTF$,F_r_tphex,beta_tphex,D_i_tphex,D_o_tphex,L_e,L_c,L_a,T_f[i],T_ev_wf,h_e_o,h_c_o,k_pipe:Q_dot[i],Q_dot_ent[i],Q_dot_boil[i],Q_dot_son[i],T_we_o[i],T_v_e[i],T_we_i[i], T_wc_i[i],T_wc_o[i],T_v_c[i],Q_dot_axial[i],R_axial[i],P_v_e[i])
rho_f[i]	= propssi('D','T',T_f[i],'P',p_in_f,ExGasCMI$) "fumes density at temperature T_f[i]"
cp_f[i]	= propssi('C','T',T_f[i],'P',p_in_f,ExGasCMI$) "fumes specific heat at temperature T_f[i]"
u_f[i]	= M_dot_f/(rho_f[i]*S_cross_tphex) "fumes velocity"
T_f[i+1]	= T_f[i]-Q_dot[i]*N_tpc/(M_dot_f*cp_f[i]) "fumes temperature"
 
End
 
"! thermosyphon heat exchanger outputs"
$varinfo T_ou_f guess=750 lower=298 units='K'
T_out_f				= T_f[N_col+1] "heat source outlet temperature in K"
T_out_f_C			= converttemp(K,C,T_out_f) "heat source outlet temperature in C"
DT_out_f 			= abs(T_out_target_f-T_out_f)
 
T_we_moy 		= average(T_we_o[1..N_col]) "average temperature of thermosyphon evaporator outlet wall"
 
Q_dot_tphex		= sum(Q_dot[i]*N_tpc, i=1,N_col)
Q_dot_tphex_ent 	= sum(Q_dot_ent[i]*N_tpc, i=1,N_col)
Q_dot_moy		= Q_dot_tphex/N_t
Q_dot_max		= Q_dot[1]
Q_dot_min			= Q_dot[N_col]
Q_dot_ent_max 	= Q_dot_ent[1]
Q_dot_ent_min 	= Q_dot_ent[N_col]
Q_dot_ent_moy 	= Q_dot_tphex_ent/N_t
 
A_tphex_e			= N_t*pi#*D_o_tphex*L_e "heat transfer surface area of thermosyphon condenser"
A_tphex_c			= N_t*pi#*D_o_tphex*L_c "heat transfer surface area of thermosyphon evaporator"
A_tphex_a			= N_t*pi#*D_o_tphex*L_a "adiabatic section surface area"
A_tphex 			= A_tphex_e+A_tphex_c  "total heat exchanger surface area"
 
q_flux_c			= Q_dot_tphex/A_tphex_c "condenser heat flux"
Call pool_boiling_critical_heatflux(ORCF$,'OTHER',0,T_ev_wf,q_flux_c:q_flux_critical)  
"~~~~~~~~~~~~~~~~" 
"!3 Performance ORC"
"! General inputs"
//CALL BasicORC(ORCF$,Q_dot_tphex,T_ev_wf,T_cd_wf,epsilon_s_tur,epsilon_s_pp,epsilon_rec,SH,SC:W_dot_net,eta_net_ORC,DT_min_rec,M_dot_r)
$Import 'C:\Users\Louis Le\Dropbox\workspace\ORCAL\ORCAL_Models\Data\To_tphex.csv' P_pp, P_fan_SI
//m_dot_wf 	= 1
//T_out_f 		= 620+273
Q_dot_h 		= Q_dot_tphex{m_dot_f*1300*(T_in_f-T_out_f)}
Q_dot_h 		= m_dot_wf*(h_in_tur- h_l_out_rec)
 
W_dot_ORC 	= W_dot_tur*eta_gen - W_dot_pp/eta_motor-P_pp/eta_motor-P_fan_SI
eta_ORC		= W_dot_ORC/Q_dot_h
W_dot_spec	= W_dot_ORC/A_tphex
 
P_ev_wf		= propssi('P','T',T_ev_wf,'Q',0,ORCF$)
P_cd_wf		= propssi('P','T',T_cd_wf,'Q',0,ORCF$)
 
"! Pump" 
Call pump1(ORCF$,P_cd_wf,P_ev_wf,h_in_pp,m_dot_wf,epsilon_s_pp: h_out_pp,W_dot_pp)
SC$ = 'True' "sub-cooling"
$IF SC$ = 'True'
	SC  		= 10
	T_in_pp	= T_cd_wf - SC
	h_in_pp 	= propssi('H','P',P_cd_wf,'T',T_in_pp,ORCF$)
$ELSE
	SC  		= 0
	T_in_pp	= T_cd_wf - SC
	h_in_pp 	= PropsSI('H','P',P_cd_wf,'Q',0,ORCF$) "pump inlet temperature"
$ENDIF
T_out_pp = propssi('T','P',P_ev_wf,'H',h_out_pp,ORCF$)
 
"! Axial inflow turbine"
Call turbine1(ORCF$, P_ev_wf, P_cd_wf, h_in_tur, m_dot_wf, epsilon_s_tur: h_out_tur,W_dot_tur, eta_s_tur)
SH$ = 'False'
$IF SH$='True'
	SH 			= 5 "superheating"
	T_in_tur 	= T_ev_wf+SH
	h_in_tur 	= PropsSI('H','P',P_ev_wf,'T',T_in_tur,ORCF$)
$ELSE
	SH 			= 0 "superheating"
	T_in_tur 	= T_ev_wf+SH
	h_in_tur 	= propssi('H','P',P_ev_wf,'Q',1,ORCF$) "turbine inlet enthalpy"
$ENDIF
T_out_tur			= propssi('T','P',P_cd_wf,'H',h_out_tur,ORCF$)
s_in_tur 			= propssi('S','P',P_ev_wf,'H',h_in_tur,ORCF$)
V_dot_in_tur 		= m_dot_wf/propssi('D','P',P_ev_wf,'H',h_in_tur,ORCF$)
V_dot_out_s_tur 	= m_dot_wf/propssi('D','P',P_cd_wf,'S',s_in_tur,ORCF$)
h_out_s_tur		= propssi('H','P',P_cd_wf,'S',s_in_tur,ORCF$)
 
Call axial_turbine_stage_efficiency(ORCF$,m_dot_wf, h_in_tur,P_ev_wf,P_cd_wf,stage_N#:eta_tur,V_r,SP,N_S_tur,RPM_tur,SP_last)
stage_N# = 1
 
"! Shell-and-tube recuperator"
Rec$ = 'true'
$IF Rec$ = 'True'
	Call hex(ORCF$,0,m_dot_wf, h_out_tur, P_cd_wf,ORCF$, 0, m_dot_wf,h_out_pp, P_ev_wf, 10, 0, 0: h_v_out_rec, P_v_out_rec, h_l_out_rec, P_l_out_rec, Q_dot_rec, eff_rec)
$ELSE
	h_v_out_rec 		= h_out_tur
	P_v_out_rec 		= P_cd_wf
	h_l_out_rec		= h_out_pp
	P_l_out_rec		= P_ev_wf
	Q_dot_rec			= 0
	eff_rec				= 0
$ENDIF
 
"! Horizontal shell-side condenser"
"~~~~~~~~~~~~~~~~"
"! Data export"
// Export results to a look up table
$CopyToLookup /T /C 'Results', 'T_out_f_C' 1 T_out_f_C
$CopyToLookup /T /C 'Results', 'Q_dot_tphex', 1 Q_dot_tphex
$CopyToLookup /T /C 'Results', 'Q_dot', 1 Q_dot[1..N_col]
"~~~~~~~~~~~~~~~~"
$bookmark Plotting data
 
"Component outlet T-s profile"
"Pump outlet"
T_comp[1] = propssi('T','P',P_ev_wf,'H',h_out_pp,ORCF$)
s_comp[1] = propssi('S','P',P_ev_wf,'H',h_out_pp,ORCF$)
 
"Recuperator - Cold side outlet"
T_comp[2] = propssi('T','P',P_ev_wf,'H',h_l_out_rec,ORCF$)
s_comp[2] = propssi('S','P',P_ev_wf,'H',h_l_out_rec,ORCF$)
 
"Evaporator: saturated liquid"
T_comp[3] = propssi('T','P',P_ev_wf,'Q',0,ORCF$)
s_comp[3] = propssi('S','P',P_ev_wf,'Q',0,ORCF$)
 
"Evaporator: saturated vapor"
T_comp[4] = propssi('T','P',P_ev_wf,'Q',1,ORCF$)
s_comp[4] = propssi('S','P',P_ev_wf,'Q',1,ORCF$)
 
"Turbine inlet"
T_comp[5] = propssi('T','P',P_ev_wf,'H',h_in_tur,ORCF$)
s_comp[5] = propssi('S','P',P_ev_wf,'H',h_in_tur,ORCF$)
 
"Turbine outlet"
T_comp[6] = propssi('T','P',P_cd_wf,'H',h_out_tur,ORCF$)
s_comp[6] = propssi('S','P',P_cd_wf,'H',h_out_tur,ORCF$)
 
"Recuperator - Hot side"
T_comp[7] = propssi('T','P',P_cd_wf,'H',h_v_out_rec,ORCF$)
s_comp[7] = propssi('S','P',P_cd_wf,'H',h_v_out_rec,ORCF$)
 
"Desuperheater outlet: saturated vapor"
T_comp[8] = propssi('T','P',P_cd_wf,'Q',1,ORCF$)
s_comp[8] = propssi('S','P',P_cd_wf,'Q',1,ORCF$)
 
"Condenser: saturated liquid"
T_comp[9] = propssi('T','P',P_cd_wf,'Q',0,ORCF$)
s_comp[9] = propssi('S','P',P_cd_wf,'Q',0,ORCF$)
 
T_comp[10] = propssi('T','P',P_cd_wf,'H',h_in_pp,ORCF$)
s_comp[10] = propssi('S','P',P_cd_wf,'H',h_in_pp,ORCF$)
 
"Heat source temperature profile"
T_h[1] = T_in_f
s_h[1] = s_comp[5]
T_h[2] = T_out_f
s_h[2] = s_comp[2]
 
"IHE Temperature profile"
{T_h_IHE[1] = T_comp[6]
s_h_IHE[1] = s_comp[2]
 
T_h_IHE[2] = T_v_out_rec
s_h_IHE[2] = s_comp[1]}
"~~~~~~~~~~~~~~~~"
"! Other directives" 
 
$SaveVarInfo 'C:\Users\Louis Le\Dropbox\workspace\ORCAL\ORCAL_Models\StaticModels\VarInfo\ORCAL_Evaporator_20160225.VAR'
//$Trace /5000 Q_dot_tphex, T_out_f, T_out_f_C, S_T
"~~~~~~~~~~~~~~~~"
$bookmark Macro commands
 
$RunMacroAfter
// parametric table
Table1$='N_col'
DeleteParametric Table1$
NewTable Table1$ Rows=5 N_col DT_out_f T_out_f_C Q_dot_tphex
AlterValues Table1$ N_col Rows=1..5 First=8 Last=12
 
// Print setup
PrintSetup Printer='Microsoft Print to PDF' Orientation=Portrait Copies=1
// Export the data to a csv file
Export 'C:\Users\Louis Le\Dropbox\workspace\ORCAL\ORCAL_Models\Data\To_ORC1.csv' ORCF$, m_dot_f, T_in_f, T_out_f, T_ev_wf, T_cd_wf
 
plot1$=concat$('T-s: ',ORCF$)
DeletePlot plot1$
PropPlot ORCF$ Ts 3 P_atm P_cd_wf P_ev_wf 0
OverlayPlot Name=plot1$ Table=ARR X=s_comp[i] Y=T_comp[i] Line=3 Symbol=15 Color=green
OverlayPlot Name=plot1$ Table=ARR X=s_h[i] Y=T_h[i] Line=3 Symbol=15 Color=red
ModifyAxis X Name=plot1$ min=-500 max=2000 Linear int=500
ModifyAxis Y Name=plot1$ min=250 max = 750 Linear int=50
 
plot2$='duty'
DeletePlot plot2$
NewPlot Name=plot2$ Table=ARR X=T_v_e[i] Y=Q_dot[i] Line=3 Symbol=1 Color=green Legend
OverlayPlot Name=plot2$ Table=ARR X=T_v_e[i] Y=Q_dot_ent[i] Line=3 Symbol=1 Color=red Legend
ModifyAxis Y Name=plot2$ min=10000 max=50000 Linear int=5000
 
{// Display the main solution window in a MS Excel file
excel.FileOpen('C:\Users\Louis Le\Dropbox\workspace\ORCAL\ORCAL_Models\StaticModels\Result\ORCAL_MultiCases.xlsx')
excel.sheet(ORCAL$)
excel.range('A1:A1000')
copy SolutionWindow
excel.Paste
copy plotwindow plot1$
excel.Pastespecial(enhanced metafile)
excel.show
pause 2
excel.Quit}
 
savesolution 'C:\Users\Louis Le\Dropbox\workspace\ORCAL\ORCAL_Models\StaticModels\Result\main_solution.csv' 
 
excel.fileopen ('C:\Users\Louis Le\Dropbox\workspace\ORCAL\ORCAL_Models\StaticModels\Result\ORCAL_Result.xlsx')
excel.sheet('solution')
excel.range('A1:A1000')
copy SolutionWindow
excel.Paste
excel.sheet('Diagram Window')
excel.range('S1:S1000')
copy plotwindow plot1$
excel.Pastespecial(enhanced metafile)
excel.show
{pause 2
excel.Quit}
 
// Save the existing file after running the program
Save 
 
open C:\Users\Louis Le\Dropbox\workspace\ORCAL\ORCAL_Models\StaticModels\ORCAL_ORC_Sizing_Optim_20160301_beta.EES
solve
$EndMacro 